-- draw

function draw_start()
 cls(3)
 
 color(3)
 print("‚ñë play hive ‚ñë", 48, 32, 7)
 
 rectfill(0,119,128,128,11)
 local text="‚ùé: open manual, üÖæÔ∏è: start game"
 print(text, 2, 121, 0)
 
 for t=1,2 do
  for s=1,5 do
   draw_tile(t, s, t+2, s+2, 0)
  end
 end
 
end

function draw_board()
 for row = 1,b do
  for col = 1,b do
   spr(16, col * c - c, row * c - c)
  end
 end
end

function draw_cells()
 for row = 2,b-1 do
  for col = 1,b do
   if not (row%2 == 1 and col == b) then
    
    stack = board[row][col].b
    if not stack then
     local t = board[row][col].t
     local s = board[row][col].s
     draw_tile(t, s, col, row, 0)
    else
     //if there is a beetle stack
     for i=1,#stack do
      local t = stack[i].t
      local s = stack[i].s
      draw_tile(t, s, col, row, i-1)
     end
     local t = board[row][col].t
     local s = board[row][col].s
     draw_tile(t, s, col, row, #stack)
    end
   end
  end
 end
end

function draw_tile(t, s, col, row, stacked)
 //offset every other row
 hex = (row % 2) * c / 2
 if t > 0 then
  local x = col * c + hex - c
  local y = row * c - c - stacked * 2
  spr(t+5, x, y-1)
  spr(t+5, x, y+1)
  spr(s, x, y)
 end
end

function draw_nearby_tiles(col, row)
 nearby = nearby_cells(col, row)
 for n=1,#nearby do
  near = nearby[n]
  draw_tile(player, bee, near.c, near.r, 0)
 end
end

function draw_cursor()
 col = cur.c
 row = cur.r
 hex = (row % 2) * c / 2
 x = col * c + hex-c
 y = row * c-c
 o = 3
 to = 0
 stacked = 0
 if row < b then
  if board[row][col].t != 0 then
   stacked += 1
  end
  stack = board[row][col].b
  if stack then
   stacked += #stack
  end
 end
 if cur.t!=0 then to=2 end
 spr(8, x-o, y-o-to, 1, 1, false, false)
 spr(8, x+o, y-o-to, 1, 1, true, false)
 spr(8, x+o, y+o-to, 1, 1, true, true)
 spr(8, x-o, y+o-to, 1, 1, false, true)
 draw_tile(cur.t, cur.s, col, row, 1+stacked)
end

function update_help()
 if message!="" then
  help_text=message
  return
 end

 if cur.r==16 then
  if hands[player][cur.c].t==0 then
   if cur.t==0 then
    help_text="use arrows to move cursor"
   else
    name = names[cur.s]
    help_text="press ‚ùé to place "..name
   end
  else
   if cur.t==0 then
    name = names[hands[player][cur.c].s]
    help_text="press ‚ùé to grab "..name
   else
    help_text="press arrows to move cursor"
   end
  end
 else
  if board[cur.r][cur.c].t==0 then
   if cur.t==0 then
    help_text="use arrows to move cursor"
   else
    name = names[cur.s]
    help_text="press ‚ùé to place "..name
   end
  elseif cur.s==btl then
   name = names[cur.s]
   help_text="press ‚ùé to place "..name
  else
   if cur.t==0 and board[cur.r][cur.c].t == player then
    name = names[board[cur.r][cur.c].s]
    help_text="press ‚ùé to grab "..name
   else
    help_text="use arrows to move cursor"
   end
  end
 end
end

function draw_help()
 if message != "" then
  bg = 8
  text = 14
 elseif player == black then
  bg = 5
  text = 0
 elseif player == white then
  bg = 6
  text = 7
 end
 rectfill(0,0,128,6,bg)
 update_help() 
 local offset = #help_text * 2
 local x_pos = 64 - offset
 print(help_text,x_pos,1,text)
end

function draw_hand()
 if player == black then
  bg = 5
  text = 6
  border = 0
 elseif player == white then
  bg = 6
 end
 rectfill(0,120,128,128,bg)
 local row = 16
 local hand = hands[player]
 for col = 1,#hand do
  local t = hand[col].t
  local s = hand[col].s
  draw_tile(t,s,col,row,0)
 end
end

function manual_page()
 page += 1
 if page > #manual then page=1 end
end

function draw_manual()
 cls(4)
 manual={{
  "object: surround foe's bee",
  "",
  "‚ùé: grab and place tiles",
  "üÖæÔ∏è: end your turn",
  "enter: system menu",
  "",
  "bee: move 1. must keep free!",
  "     have to place by turn 4.",
  "ant: can move any number.",
  "spider: must move exactly 3.",
  "cricket: jumps over tiles to",
  "         next empty space.",
  "beetle: move 1. can go on top.",
  "        pinned tiles cant move.",
  "",
  },{
  "additional rules:",
  "",
  "all bugs always form one hive.",
  "",
  "placing:",
  "on first turn, place in middle.",
  "cant place bugs next to foes.",
  "(except for 2nd player 1st turn)",
  "",
  "moving:",
  "cant move bugs until bee played.",
  "most bugs move by sliding.",
  "can't slide in narrow gaps.",
  "(must use cricket or beetle)",
  "",
  }
 }
 for l=1,#manual[page] do
  local text = manual[page][l]
  print(text, 1, 8*(l-1)+1, 15)
 end
 
 rectfill(0,119,128,128,15)
 text="‚ùé: next page, üÖæÔ∏è: close manual"
 print(text, 2, 121, 4)
end

function _draw()
 cls()
 if state == "start" then
  draw_start()
 elseif state == "playing" or
  state == "over" then
  draw_board()
  draw_cells()
  draw_help()
  draw_hand()
  draw_cursor()
 elseif state == "manual" then
  draw_manual()
 end
end
